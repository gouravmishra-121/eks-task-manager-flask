name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose action'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  checkout:
    name: Checkout Code
    runs-on: ubuntu-latest
    outputs:
      action: ${{ steps.get-action.outputs.action }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get Action Input
        id: get-action
        run: echo "::set-output name=action::${{ github.event.inputs.action }}"

  approval:
    name: Manual Approval
    needs: checkout
    runs-on: ubuntu-latest
    if: ${{ needs.checkout.outputs.action == 'apply' }}
    steps:
      - name: Await Manual Approval
        uses: peter-evans/manual-approval@v1
        with:
          approvers: 'your-github-username'
          instructions: 'Please approve to continue with Terraform Apply'

  terraform:
    name: Terraform Commands
    needs: approval
    runs-on: ubuntu-latest
    if: ${{ needs.checkout.outputs.action == 'apply' }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        working-directory: Infra
        run: terraform init

      - name: Terraform Validate
        working-directory: Infra
        run: terraform validate

      - name: Terraform Plan
        working-directory: Infra
        id: plan
        run: terraform plan -out=tfplan

      - name: Display Terraform Plan
        working-directory: Infra
        id: show-plan
        run: terraform show -no-color tfplan

      - name: Terraform Apply
        if: ${{ needs.checkout.outputs.action == 'apply' }}
        working-directory: Infra
        run: terraform apply -auto-approve tfplan

      - name: Terraform Destroy
        if: ${{ needs.checkout.outputs.action == 'destroy' }}
        working-directory: Infra
        run: terraform destroy -auto-approve
